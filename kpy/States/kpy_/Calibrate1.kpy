
from kzpy3.utils3 import *

[< Class,Calibrate1,Exit_is_Timed
	D['impossible source states'] = ['Calibrate1','Calibrate2']
	D['possible destination states'] = ['Calibrate2']
	D['possible source states'] = ['Calibrate0']
	D['impossible destination states'] = ['Calibrate0','Calibrate1']
	
	[< def_Function(P):
		"Can this state can be entered?"
		if not P['now in calibration mode']:
			cr(indent+CLASS_TYPE,"not P['now in calibration mode'], cannot enter",D['state'])
			return False
		[< function_auto-utils
		result = parent(P)
		return result

	[< def_Function(P):
		"Upon entry do this..."
		[< function_auto-utils
		result = parent(P)
		if result == False:
			return
		D['entry timer'] = Timer(1.0)
		cr(indent+CLASS_TYPE,"""
			s = P['HUMAN_SMOOTHING_PARAMETER_1']
			P['servo_pwm_null'] = (1.0-s)*P['servo_pwm'] + s*P['servo_pwm_null']
			P['motor_pwm_null'] = (1.0-s)*P['motor_pwm'] + s*P['motor_pwm_null']
			P['servo_pwm_min'] = P['servo_pwm_null']
			P['servo_pwm_max'] = P['servo_pwm_null']
			P['motor_pwm_min'] = P['motor_pwm_null']
			P['motor_pwm_max'] = P['motor_pwm_null']
			P['servo_pwm_smooth'] = P['servo_pwm_null']
			P['motor_pwm_smooth'] = P['motor_pwm_null']
		""")
		return True





	[<put_functions_into_D

	return D




	








if __name__ == '__main__':

	#clear_screen()

	P={}
	P['current state'] = 'Calibrate0'
	P['now in calibration mode'] = True
	
	S = Calibrate1()
	S['dst_state'] = 'next state'
	S['possible destination states'] = ['next state']
	S["Upon entry do this..."](P)
	S["Upon exit do this..."](P)
	time.sleep(2)
	S["Upon entry do this..."](P)
	S["Upon exit do this..."](P)

	pprint(P)





#EOF