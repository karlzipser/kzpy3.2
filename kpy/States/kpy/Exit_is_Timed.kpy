from kzpy3.utils3 import *
"""
python kzpy3/kpy/adjust.py py kzpy3/kpy/States/py kpy kzpy3/kpy/States/kpy && python kzpy3/kpy/States/py/State.py
"""

[< Class,Exit_is_Timed,State
	D['impossible source states'] = []
	D['possible source states'] = []
	D['impossible destination states'] = []
	D['possible destination states'] = []

	[< def_Function(P):
		"Is it time to exit?"
		[< function_auto-utils
		if CLASS_TYPE != P['current state']:
			cb(indent+CLASS_TYPE,': Not in state',CLASS_TYPE+", so can't exit.")
			return False
		cb(indent+"entry timer check: ",D['entry timer'].check(),D['entry timer'].time())
		if D['entry timer'].check():
			cb(indent+CLASS_TYPE,': It is time to exit.')
			return True
		cb(indent+CLASS_TYPE,': It is not time to exit.')
		return False

	[< def_Function(P):
		"Upon entry do this..."
		[< function_auto-utils
		D['entry timer'] = Timer(0.1)
		return True
		
	[<put_functions_into_D
	
	return D




	








if __name__ == '__main__':

	#clear_screen()

	P={}
	P['current state'] = 'none'
	P['now in calibration mode'] = True
	
	S = State()
	S['dst_state'] = 'next state'
	S['entry timer'] = Timer(0.1)
	S['possible destination states'] = ['next state']
	S["Upon entry do this..."](P)
	S["Upon exit do this..."](P)
	time.sleep(0.2)
	S["Upon entry do this..."](P)
	S["Upon exit do this..."](P)

	pprint(P)





#EOF